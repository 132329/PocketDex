@model Backend.Models.PokemonView

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Pokemons", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PokedexNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PokedexNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PokedexNumber, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.SpriteFile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="file-input-new">
                <div class="input-group" style="width:280px">
                    <div tabindex="500" class="form-control file-caption">
                        <div class="file-caption-name" id="NombreArchivo">
                        </div>
                    </div>
                    <div class="input-group-btn" style="height:auto">
                        <div tabindex="500" class="btn btn-primary btn-file">
                            <i class="glyphicon glyphicon-folder-open"></i>
                            File Search...
                            @Html.TextBoxFor(modelo => modelo.SpriteFile, new { type = "file", id = "files" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Types, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Types, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Types, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Moves, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Moves, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Moves, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Abilities, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Abilities, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Abilities, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LocationLat, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LocationLat, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LocationLat, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LocationLong, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LocationLong, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LocationLong, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
